
parameters:
  pollTimeout:
    name: pollTimeout
    description: >
        Timeout used in long-polling calls (in seconds).
        How many seconds server should wait for new events (0.0 means it should
        return immediately if there are no events)
    required: false
    in: query
    schema:
      type: number
      format: float
      minimum: 0.0

  ackTimeout:
    name: ackTimeout
    description: >
        Timeout used in blocking calls waiting for eg. acknowledgement.
        How many seconds server should wait for response/acknowledgement of an action
        (0.0 means it should wait for other party's response indefinitely)
    required: false
    in: query
    schema:
      type: number
      format: float
      minimum: 0.0

  maxItems:
    name: maxItems
    description: >
        Maximum number of items that server should return at once
        (empty value means no limit).
    required: false
    in: query
    schema:
      type: integer
      format: int32
      minimum: 0

  maxEvents:
    name: maxEvents
    description: >
        Maximum number of events that server should return at once
        (empty value means no limit).
    required: false
    in: query
    schema:
      type: integer
      format: int32
      minimum: 0

  afterTimestamp:
    name: afterTimestamp
    description: Apply only to events later than specified timestamp
    in: query
    required: false
    schema:
      type: string
      format: date-time

  appSessionId:
    name: appSessionId
    description: A correlation/session identifier used for querying events related to an action
        where this appSessionId has been specified
    in: query
    required: false
    schema:
      type: string

responses:
  BadRequest:
    description: (400) Bad request
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  Unauthorized:
    description: (401) Authorization information is missing or invalid.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  Forbidden:
    description: (403) Forbidden.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  NotFound:
    description: (404) The specified resource was not found.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  Timeout:
    description: (408) Timeout.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  Conflict:
    description: (409) Conflict.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  Gone:
    description: (410) Gone.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  ServerError:
    description: (500) Server error.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  AckTimeout:
    description: (504) The Requestor has not responded to the request within timeout.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'

  UnexpectedError:
    description: Unexpected error.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ErrorMessage'


components:
  securitySchemes:
    app_key:
      type: http
      scheme: bearer

  schemas:
    ErrorMessage:
      type: object
      description: >
        Generic Error Message structure.
      properties:
        message:
          type: string
